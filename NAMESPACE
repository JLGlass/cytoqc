# Generated by roxygen2: do not edit by hand

S3method(as_tibble,cqc_report_params)
S3method(cqc_check,cqc_reference_channel)
S3method(cqc_check,cqc_reference_marker)
S3method(cqc_find_solution,cqc_report)
S3method(cqc_find_solution,cqc_report_channel)
S3method(cqc_find_solution,cqc_report_marker)
S3method(cqc_fix,cqc_solution_channel)
S3method(cqc_fix,cqc_solution_marker)
S3method(cqc_remove_not_in_reference,cqc_report_channel)
S3method(cqc_remove_not_in_reference,cqc_report_marker)
S3method(diff,cqc_group_panel)
S3method(knit_print,cqc_group_panel_summary)
S3method(knit_print,cqc_reference)
S3method(knit_print,cqc_report_params)
S3method(knit_print,cqc_solution)
S3method(print,cqc_data)
S3method(print,cqc_report_params)
S3method(split,cqc_group_panel)
S3method(summary,cqc_group_panel)
S3method(write_fcs,cqc_data)
export(cqc_check)
export(cqc_drop_samples)
export(cqc_find_reference_channel)
export(cqc_find_reference_marker)
export(cqc_find_solution)
export(cqc_fix)
export(cqc_group_by_panel)
export(cqc_load_fcs)
export(cqc_remove_not_in_reference)
export(outlier.cutoff)
export(outlier.norm)
export(outlier.t)
export(proportion.outliers.mle)
export(proportion.outliers.robust)
export(qoutlier)
export(rlm)
export(write_fcs)
importFrom(MASS,huber)
importFrom(MASS,rlm)
importFrom(dplyr,"%>%")
importFrom(dplyr,add_count)
importFrom(dplyr,anti_join)
importFrom(dplyr,arrange)
importFrom(dplyr,as_tibble)
importFrom(dplyr,bind_rows)
importFrom(dplyr,count)
importFrom(dplyr,distinct)
importFrom(dplyr,filter)
importFrom(dplyr,group_indices)
importFrom(dplyr,group_split)
importFrom(dplyr,inner_join)
importFrom(dplyr,mutate)
importFrom(dplyr,pull)
importFrom(dplyr,rename)
importFrom(dplyr,select)
importFrom(flowWorkspace,colnames)
importFrom(kableExtra,collapse_rows)
importFrom(kableExtra,kable_styling)
importFrom(knitr,kable)
importFrom(knitr,knit_print)
importFrom(purrr,map)
importFrom(purrr,map_dfr)
importFrom(purrr,reduce)
importFrom(purrr,walk)
importFrom(tibble,add_row)
importFrom(tibble,as.tibble)
importFrom(tibble,tibble)
importFrom(tidyr,separate)
importFrom(tidyr,separate_rows)
importFrom(tidyr,unite)
